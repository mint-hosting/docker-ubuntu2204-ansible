---
name: Build

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: "10 1 * * 0"

env:
  IMAGE_NAME: docker-ubuntu2204-ansible

jobs:
  # Test the image builds and works correctly.
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Test building image.
        run: docker build -t docker-ansible .

      - name: Run the built image.
        run: docker run --name test-container -d --privileged docker-ansible

      - name: Verify Ansible is accessible in the built image.
        run: docker exec --tty test-container env TERM=xterm ansible --version

  # If on master branch, build and release image.
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3
      
      - name: Build Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
      
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.PASSWORD }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push docker image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION